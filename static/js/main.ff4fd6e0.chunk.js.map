{"version":3,"sources":["content/max-rowan.jpg","content/zion-background.jpg","utils/useWindowDimensions.ts","components/SkillChart/index.tsx","components/Portfolio/index.tsx","content/sections.tsx","components/Navbar/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getWindowDimensions","window","width","innerWidth","height","innerHeight","SKILL_SECTIONS","name","data","value","SkillRadarChart","newData","map","skill","fullMark","className","style","margin","dataKey","stroke","fill","fillOpacity","SkillChart","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Tab","Container","id","defaultActiveKey","Row","Col","sm","md","lg","xl","Nav","variant","section","i","Item","key","Link","eventKey","toLowerCase","replace","Content","Pane","Portfolio","repos","setRepos","a","fetch","response","json","sort","repoA","repoB","aDate","Date","pushed_at","getTime","reposToDisplay","slice","today","forEach","repo","diffTime","Math","abs","diffDays","ceil","daysSinceLastChange","getRepos","marginBottom","href","target","rel","listStyle","fontSize","html_url","description","sections","title","content","Image","src","maxRowanPhoto","roundedCircle","fluid","marginTop","data-show-count","data-size","display","data-color-scheme","aria-label","Navbar","expand","sticky","bg","boxShadow","Toggle","aria-controls","Brand","as","Collapse","location","host","App","padding","banner","noGutters","backgroundColor","xs","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,8RCE3C,SAASC,IAAuB,IAAD,EACsBC,OACnD,MAAO,CACLC,MAH2B,EACrBC,WAGNC,OAJ2B,EACFC,aCa7B,IAAMC,EAAiC,CACrC,CACEC,KAAM,YACNC,KAAM,CACJ,CAAED,KAAM,aAAcE,MAAO,IAC7B,CAAEF,KAAM,aAAcE,MAAO,IAC7B,CAAEF,KAAM,SAAUE,MAAO,IACzB,CAAEF,KAAM,MAAOE,MAAO,IACtB,CAAEF,KAAM,SAAUE,MAAO,MAG7B,CACEF,KAAM,YACNC,KAAM,CACJ,CAAED,KAAM,QAASE,MAAO,IACxB,CAAEF,KAAM,SAAUE,MAAO,IACzB,CAAEF,KAAM,UAAWE,MAAO,IAC1B,CAAEF,KAAM,QAASE,MAAO,IACxB,CAAEF,KAAM,OAAQE,MAAO,MAG3B,CACEF,KAAM,WACNC,KAAM,CACJ,CAAED,KAAM,UAAWE,MAAO,IAC1B,CAAEF,KAAM,aAAcE,MAAO,IAC7B,CAAEF,KAAM,UAAWE,MAAO,IAC1B,CAAEF,KAAM,iBAAkBE,MAAO,IACjC,CAAEF,KAAM,iBAAkBE,MAAO,MAGrC,CACEF,KAAM,cACNC,KAAM,CACJ,CAAED,KAAM,aAAcE,MAAO,IAC7B,CAAEF,KAAM,UAAWE,MAAO,IAC1B,CAAEF,KAAM,WAAYE,MAAO,IAC3B,CAAEF,KAAM,QAASE,MAAO,OASxBC,EAAwC,SAAC,GAAc,IACrDC,EADoD,EAAXH,KAC1BI,KAAI,SAACC,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBC,SAAU,SAC3D,OACE,kBAAC,IAAD,CAAqBZ,MAAM,MAAME,OAAQ,IAAKW,UAAU,0BACtD,kBAAC,IAAD,CAAYP,KAAMG,EAASK,MAAO,CAAEC,OAAQ,WAC1C,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAgBC,QAAQ,SACxB,kBAAC,IAAD,CACEX,KAAK,cACLW,QAAQ,QACRC,OAAO,UACPC,KAAK,UACLC,YAAa,QAuCRC,EAhCc,WAAO,IAC1BpB,EDxEK,WAAgC,IAAD,EACIqB,mBAASvB,KADb,mBACrCwB,EADqC,KACnBC,EADmB,KAY5C,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBzB,KAItB,OADAC,OAAO2B,iBAAiB,SAAUD,GAC3B,kBAAM1B,OAAO4B,oBAAoB,SAAUF,MACjD,IAEIH,EC4DWM,GAAV5B,MACR,OACE,kBAAC6B,EAAA,EAAIC,UAAL,CAAeC,GAAG,sBAAsBC,iBAAiB,aACvD,kBAACC,EAAA,EAAD,CAAKpB,UAAU,6BACb,kBAACqB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAACC,EAAA,EAAD,CAAKrB,MAAI,EAACsB,QAAQ,QAAQ3B,UAAWb,EAAQ,IAAM,cAAgB,IAChEI,EAAeM,KAAI,SAAC+B,EAAuBC,GAAxB,OAClB,kBAACH,EAAA,EAAII,KAAL,CAAUC,IAAKF,GACb,kBAACH,EAAA,EAAIM,KAAL,CAAUC,SAAUL,EAAQpC,KAAK0C,cAAcC,QAAQ,IAAK,MACzDP,EAAQpC,aAOrB,kBAAC4B,EAAA,EAAD,CAAKpB,UAAU,6BACb,kBAACqB,EAAA,EAAD,KACE,kBAACL,EAAA,EAAIoB,QAAL,KACG7C,EAAeM,KAAI,SAAC+B,EAAuBC,GAAxB,OAClB,kBAACb,EAAA,EAAIqB,KAAL,CAAUJ,SAAUL,EAAQpC,KAAK0C,cAAcC,QAAQ,IAAK,KAAMJ,IAAKF,GACrE,kBAAC,EAAD,CAAiBpC,KAAMmC,EAAQnC,gB,0BC5ChC6C,EAjDa,WAAO,IAAD,EACN9B,mBAAuB,IADjB,mBACzB+B,EADyB,KAClBC,EADkB,KAwBhC,OArBA7B,qBAAU,YACM,uCAAG,kCAAA8B,EAAA,sEACQC,MAAM,+CADd,cACTC,EADS,gBAEkBA,EAASC,OAF3B,QAETnD,EAFS,QAGVoD,MAAK,SAACC,EAAYC,GACrB,IAAMC,EAAQ,IAAIC,KAAKH,EAAMI,WAE7B,OADc,IAAID,KAAKF,EAAMG,WAChBC,UAAYH,EAAMG,aAE3BC,EAAiB3D,EAAK4D,MAAM,EAAG,GAC/BC,EAAQ,IAAIL,KAClBG,EAAeG,SAAQ,SAACC,GACtB,IAAMC,EAAWC,KAAKC,IAAIL,EAAMH,UAAY,IAAIF,KAAKO,EAAKN,WAAWC,WAC/DS,EAAWF,KAAKG,KAAKJ,EAAQ,OACnCD,EAAKM,oBAAsBF,KAE7BpB,EAASY,GAfM,4CAAH,qDAiBdW,KACC,IAGD,6BACE,uBAAG9D,MAAO,CAAE+D,aAAc,SAA1B,4JAEkE,IAChE,uBAAGC,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBACxD,uBAAGnE,UAAU,kBADf,WAEK,IALP,uBAQA,4BACGuC,EAAM1C,KAAI,SAAC2D,EAAkB3B,GAAnB,OACT,wBAAIE,IAAKF,EAAG5B,MAAO,CAAEmE,UAAW,OAAQC,SAAU,SAChD,uBAAGJ,KAAMT,EAAKc,SAAUJ,OAAO,SAASC,IAAI,uBACzCX,EAAKhE,MACH,IAHP,MAIMgE,EAAKe,YAJX,MAI2B,IACxBf,EAAKM,oBAAuB,EAA5B,UAAmCN,EAAKM,oBAAxC,aAAyE,mB,kBC+CvEU,EApFa,CAC1B,CACEC,MAAO,WACPC,QACE,6BACE,kBAACC,EAAA,EAAD,CAAOC,IAAKC,IAAeC,eAAa,EAAC7E,MAAO,CAAEZ,OAAQ,MAAOF,MAAO,OAAS4F,OAAK,IACtF,yBAAK9E,MAAO,CAAEZ,OAAQ,UACtB,qVASN,CACEoF,MAAO,SACPC,QACE,6BACE,kBAACzD,EAAA,EAAD,CAAW8D,OAAK,GACd,kBAAC3D,EAAA,EAAD,CAAKpB,UAAU,6BACb,kBAACqB,EAAA,EAAD,CAAKC,GAAI,IACP,gFACqD,IACnD,6CACY,sCAHd,uMASA,yBAAKrB,MAAO,CAAEZ,OAAQ,UACtB,sFAC0D,8CAD1D,IACuF,IACrF,8CAFF,QAEkC,0CAFlC,4BAEmF,IACjF,yCAHF,yBAG8C,2CAH9C,oBAIO,IACL,8CALF,6CAKwE,IACtE,yCANF,oBAWN,yBAAKY,MAAO,CAAEZ,OAAQ,UACtB,kBAAC,EAAD,QAQN,CACEoF,MAAO,YACPC,QAAS,kBAAC,EAAD,OAEX,CACED,MAAO,UACPC,QACE,yBAAKzE,MAAO,CAAE+E,UAAW,SACvB,uBACEf,KAAK,uDACLjE,UAAU,wBACViF,kBAAgB,QAChBC,YAAU,SAJZ,wBAQA,0BAAMjF,MAAO,CAAEd,MAAO,OAAQgG,QAAS,kBACvC,kBAAC,IAAD,CACElB,KAAK,8BACLmB,oBAAkB,kDAClBF,YAAU,QACVD,mBAAiB,EACjBI,aAAW,8BALb,uB,2BCvDOC,EAxBU,WACvB,OACE,kBAAC,IAAD,CACEC,OAAO,KACPC,OAAO,MACPC,GAAG,QACH9D,QAAQ,QACR1B,MAAO,CAAEyF,UAAW,wBAEpB,kBAAC,IAASC,OAAV,CAAiBC,gBAAc,qBAC/B,kBAAC,IAASC,MAAV,CAAgBC,GAAG,QAAnB,aACA,kBAAC,IAASC,SAAV,KACE,kBAACrE,EAAA,EAAD,KACG8C,EAAS3E,KAAI,gBAAG4E,EAAH,EAAGA,MAAH,OACZ,kBAAC/C,EAAA,EAAIM,KAAL,CAAUD,IAAK0C,EAAOR,KAAI,YAAO/E,OAAO8G,SAASC,KAAvB,YAA+BxB,IACtDA,U,OCuBAyB,MAhCf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAACjF,EAAA,EAAD,CAAW8D,OAAK,EAAC9E,MAAO,CAAEkG,QAAS,IACjC,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACsD,EAAA,EAAD,CAAOC,IAAKwB,IAAQrB,OAAK,MAG5BP,EAAS3E,KAAI,WAAqBgC,GAArB,IAAG4C,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACZ,kBAACtD,EAAA,EAAD,CACEiF,WAAS,EACTnF,GAAIuD,EACJ1C,IAAK0C,EACLxE,MAAO4B,EAAI,IAAM,EAAI,CAAEyE,gBAjBnB,WAiBgD,CAAEA,gBAlBjD,YAoBL,kBAACrF,EAAA,EAAD,CAAW8D,OAAK,EAAC/E,UAAU,0BACzB,kBAACoB,EAAA,EAAD,CAAKiF,WAAS,EAACrG,UAAU,6BACvB,kBAACqB,EAAA,EAAD,CAAKkF,GAAI,GAAIjF,GAAI,IACf,4BAAKmD,GACJC,YCpBC8B,QACW,cAA7BtH,OAAO8G,SAASS,UAEe,UAA7BvH,OAAO8G,SAASS,UAEhBvH,OAAO8G,SAASS,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ff4fd6e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/max-rowan.c1ccb9c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zion-background.df57d4af.jpg\";","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import React from 'react'\nimport { RadarChart, PolarGrid, PolarAngleAxis, Radar, ResponsiveContainer } from 'recharts'\nimport { Tab, Row, Col, Nav } from 'react-bootstrap'\nimport './index.css'\nimport useWindowDimensions from '../../utils/useWindowDimensions'\n\ninterface SkillSectionDataItem {\n  name: string\n  value: number\n}\n\ninterface SkillSection {\n  name: string\n  data: SkillSectionDataItem[]\n}\n\nconst SKILL_SECTIONS: SkillSection[] = [\n  {\n    name: 'Languages',\n    data: [\n      { name: 'JavaScript', value: 90 },\n      { name: 'Typescript', value: 90 },\n      { name: 'Python', value: 80 },\n      { name: 'SQL', value: 60 },\n      { name: 'Elixir', value: 40 }\n    ],\n  },\n  {\n    name: 'Front End',\n    data: [\n      { name: 'React', value: 95 },\n      { name: 'Apollo', value: 75 },\n      { name: 'webpack', value: 85 },\n      { name: 'mocha', value: 90 },\n      { name: 'jest', value: 90 },\n    ],\n  },\n  {\n    name: 'Back End',\n    data: [\n      { name: 'Node.js', value: 90 },\n      { name: 'Express.js', value: 90 },\n      { name: 'GraphQL', value: 70 },\n      { name: 'Flask (python)', value: 75 },\n      { name: 'Elixir/Phoenix', value: 40 }\n    ],\n  },\n  {\n    name: 'Data Stores',\n    data: [\n      { name: 'PostgreSQL', value: 90 },\n      { name: 'MongoDB', value: 60 },\n      { name: 'RabbitMQ', value: 70 },\n      { name: 'Redis', value: 65 },\n    ],\n  }\n]\n\ninterface ChartProps {\n  data: SkillSectionDataItem[]\n}\n\nconst SkillRadarChart: React.FC<ChartProps> = ({ data }) => {\n  const newData = data.map((skill) => ({ ...skill, fullMark: 100 }))\n  return (\n    <ResponsiveContainer width=\"90%\" height={400} className=\"skill_chart__container\">\n      <RadarChart data={newData} style={{ margin: '0 auto' }}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"name\" />\n        <Radar\n          name=\"Skill Level\"\n          dataKey=\"value\"\n          stroke=\"#007BFF\"\n          fill=\"#007BFF\"\n          fillOpacity={0.7}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  )\n}\n\nconst SkillChart: React.FC = () => {\n  const { width } = useWindowDimensions()\n  return (\n    <Tab.Container id=\"center-tabs-example\" defaultActiveKey=\"languages\">\n      <Row className=\"justify-content-md-center\">\n        <Col sm={12} md={12} lg={9} xl={8}>\n          <Nav fill variant=\"pills\" className={width < 730 ? 'flex-column' : ''}>\n            {SKILL_SECTIONS.map((section: SkillSection, i) => (\n              <Nav.Item key={i}>\n                <Nav.Link eventKey={section.name.toLowerCase().replace(' ', '-')}>\n                  {section.name}\n                </Nav.Link>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col>\n          <Tab.Content>\n            {SKILL_SECTIONS.map((section: SkillSection, i) => (\n              <Tab.Pane eventKey={section.name.toLowerCase().replace(' ', '-')} key={i}>\n                <SkillRadarChart data={section.data} />\n              </Tab.Pane>\n            ))}\n          </Tab.Content>\n        </Col>\n      </Row>\n    </Tab.Container>\n  )\n}\n\nexport default SkillChart\n","import React, { useState, useEffect } from 'react'\n\ninterface Repository {\n  name: string\n  pushed_at: string\n  html_url: string\n  description: string\n  daysSinceLastChange?: number\n}\n\nconst Portfolio: React.FC = () => {\n  const [repos, setRepos] = useState<Repository[]>([])\n\n  useEffect(() => {\n    const getRepos = async () => {\n      const response = await fetch('https://api.github.com/users/maxkrieg/repos')\n      const data: Repository[] = await response.json()\n      data.sort((repoA: any, repoB: any) => {\n        const aDate = new Date(repoA.pushed_at)\n        const bDate = new Date(repoB.pushed_at)\n        return bDate.getTime() - aDate.getTime()\n      })\n      const reposToDisplay = data.slice(0, 5)\n      const today = new Date()\n      reposToDisplay.forEach((repo) => {\n        const diffTime = Math.abs(today.getTime() - new Date(repo.pushed_at).getTime())\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n        repo.daysSinceLastChange = diffDays\n      })\n      setRepos(reposToDisplay)\n    }\n    getRepos()\n  }, [])\n\n  return (\n    <div>\n      <p style={{ marginBottom: '16px' }}>\n        While most of my code is written for work, below is a list of some recent (or potentially\n        not recent) contributions on personal projects. Head over to my{' '}\n        <a href=\"https://github.com/maxkrieg\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className=\"fab fa-github\"></i> github\n        </a>{' '}\n        for all of my code.\n      </p>\n      <ul>\n        {repos.map((repo: Repository, i: number) => (\n          <li key={i} style={{ listStyle: 'none', fontSize: '14px' }}>\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {repo.name}\n            </a>{' '}\n            // {repo.description} //{' '}\n            {repo.daysSinceLastChange! > 1 ? `${repo.daysSinceLastChange} days ago` : 'yesterday'}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Portfolio\n","import React from 'react'\nimport { Container, Row, Col, Image } from 'react-bootstrap'\nimport GitHubButton from 'react-github-btn'\n\nimport SkillChart from '../components/SkillChart'\n// import Timeline from '../components/Timeline'\nimport Portfolio from '../components/Portfolio'\nimport maxRowanPhoto from './max-rowan.jpg'\n\ninterface Section {\n  title: string\n  content: JSX.Element\n}\n\nconst sections: Section[] = [\n  {\n    title: 'about me',\n    content: (\n      <div>\n        <Image src={maxRowanPhoto} roundedCircle style={{ height: '20%', width: '20%' }} fluid />\n        <div style={{ height: '16px' }} />\n        <p>\n          I'm a passionate Software Engineer with experience working on full-stack web applications\n          and platforms in the SaaS industry. I've been a technical lead on numerous teams where I\n          have learned to train and grow effective engineering teams. My primary skill set includes\n          Node.js, React, Python, and PostgreSQL.\n        </p>\n      </div>\n    ),\n  },\n  {\n    title: 'skills',\n    content: (\n      <div>\n        <Container fluid>\n          <Row className=\"justify-content-md-center\">\n            <Col sm={12}>\n              <p>\n                The reason I enjoy Software Development is because{' '}\n                <strong>\n                  I love to <em>learn</em>\n                </strong>\n                . I enjoy challenging myself by skilling up in new areas. I believe there is no \"one\n                size fits all\" when it comes to a tech stack and that different circumstances call\n                for different technologies.\n              </p>\n              <div style={{ height: '20px' }} />\n              <p>\n                My current programming language skills are strongest in <strong>JavaScript</strong>,{' '}\n                <strong>TypeScript</strong> and <strong>Python</strong>. For frameworks, I enjoy{' '}\n                <strong>React</strong> on the front end and <strong>Node.js</strong> on the back\n                end.{' '}\n                <strong>PostgreSQL</strong> has been my database of choice, alongside{' '}\n                <strong>Redis</strong> for caching.\n              </p>\n            </Col>\n          </Row>\n        </Container>\n        <div style={{ height: '30px' }} />\n        <SkillChart />\n      </div>\n    ),\n  },\n  // {\n  //   title: 'timeline',\n  //   content: <Timeline />,\n  // },\n  {\n    title: 'portfolio',\n    content: <Portfolio />,\n  },\n  {\n    title: 'contact',\n    content: (\n      <div style={{ marginTop: '10px' }}>\n        <a\n          href=\"https://twitter.com/MaxwellKrieg?ref_src=twsrc%5Etfw\"\n          className=\"twitter-follow-button\"\n          data-show-count=\"false\"\n          data-size=\"large\"\n        >\n          Follow @MaxwellKrieg\n        </a>\n        <span style={{ width: '10px', display: 'inline-block' }} />\n        <GitHubButton\n          href=\"https://github.com/maxkrieg\"\n          data-color-scheme=\"no-preference: light; light: light; dark: dark;\"\n          data-size=\"large\"\n          data-show-count={true}\n          aria-label=\"Follow @maxkrieg on GitHub\"\n        >\n          Follow @maxkrieg\n        </GitHubButton>\n      </div>\n    ),\n  },\n]\n\nexport default sections\n","import React from 'react'\nimport { Nav, Navbar as NavbarRB } from 'react-bootstrap'\n\nimport sections from '../../content/sections'\n\nconst Navbar: React.FC = () => {\n  return (\n    <NavbarRB\n      expand=\"sm\"\n      sticky=\"top\"\n      bg=\"light\"\n      variant=\"light\"\n      style={{ boxShadow: '0 2px 10px 0px #777' }}\n    >\n      <NavbarRB.Toggle aria-controls=\"basic-navbar-nav\" />\n      <NavbarRB.Brand as=\"span\">MAX KRIEG</NavbarRB.Brand>\n      <NavbarRB.Collapse>\n        <Nav>\n          {sections.map(({ title }) => (\n            <Nav.Link key={title} href={`//${window.location.host}#${title}`}>\n              {title}\n            </Nav.Link>\n          ))}\n        </Nav>\n      </NavbarRB.Collapse>\n    </NavbarRB>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { Container, Row, Col, Image } from 'react-bootstrap'\n\nimport sections from './content/sections'\nimport banner from './content/zion-background.jpg'\nimport Navbar from './components/Navbar'\nimport './App.css'\n\nconst LIGHT_BG = '#F1F2F4'\nconst DARK_BG = '#E2E6E9'\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Container fluid style={{ padding: 0 }}>\n        <Row>\n          <Col>\n            <Image src={banner} fluid />\n          </Col>\n        </Row>\n        {sections.map(({ title, content }, i) => (\n          <Row\n            noGutters\n            id={title}\n            key={title}\n            style={i % 2 === 0 ? { backgroundColor: DARK_BG } : { backgroundColor: LIGHT_BG }}\n          >\n            <Container fluid className=\"home_section-container\">\n              <Row noGutters className=\"justify-content-md-center\">\n                <Col xs={12} sm={12}>\n                  <h2>{title}</h2>\n                  {content}\n                </Col>\n              </Row>\n            </Container>\n          </Row>\n        ))}\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import { AppNew } from './AppNew'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}